{"version":3,"sources":["webpack:///./src/common/src/common/modalHash.vue"],"names":[],"mappings":";AAyMA;EACA;EACA;CACA","file":"static/css/5.5.css","sourcesContent":["<template>\r\n  <div class=\"blockSearch wrapper\">\r\n    <div class=\"row\">\r\n        <div class=\"container top-title-wrap search\"><span class=\"title\">Transaction：</span><small id=\"block-number\" :title=\"hash\">{{this.hash}}</small></div>\r\n    </div>\r\n    <div style=\"padding: 0 10px\" class=\"container search detail-section-wrap\">\r\n        <div class=\"row\">\r\n            <div class=\"section-title\">Summary</div>\r\n        </div>\r\n        <div class=\"section-body\">\r\n            <table class=\"detail-table\">\r\n                <tr v-show=\"false\">\r\n                    <td>Height：</td>\r\n                    <td>\r\n                        <a id=\"block-pre\" class=\"block-nav block-nav-pre\" @click=\"dec()\"></a>\r\n                        <span id=\"block-number2\">{{this.hash}}</span>\r\n                        <a id=\"block-next\" class=\"block-nav block-nav-next\" @click=\"add()\"></a>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Hash：</td>\r\n                    <td><span id=\"block-hash\">{{this.summary.hash }}</span></td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Block Height：</td>\r\n                    <td><router-link id=\"block-timestamp\" :to=\"{path:'/block/search/'+this.summary.blockNumber}\">{{this.summary.blockNumber}}</router-link></td>\r\n                </tr>\r\n                <tr>\r\n                    <td>From：</td>\r\n                    <td><router-link id=\"block-timestamp\" :to=\"{path:'/transaction/address/'+this.summary.fromAddress}\">{{this.summary.fromAddress}}</router-link></td>\r\n                </tr>\r\n                <tr>\r\n                    <td>To：</td>\r\n                    <td><router-link id=\"block-timestamp\" :to=\"{path:'/transaction/address/'+this.summary.toAddress}\">{{this.summary.toAddress}}</router-link></td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Amount：</td>\r\n                    <td><span id=\"block-txn\">{{this.summary.tokenValue | wei}} DCC</span></td>\r\n                </tr>\r\n                 <tr>\r\n                    <td>DCC Transfer：</td>\r\n                    <td><span v-show=\"this.detail.fromAddress\" id=\"block-txn\">{{this.summary.tokenValue | wei}} DCC from \r\n                      <router-link  :to=\"{path:'/transaction/address/'+this.detail.fromAddress}\">{{this.detail.fromAddress | trimAddress}}</router-link> to <router-link :to=\"{path:'/transaction/address/'+this.detail.toAddress}\">{{this.detail.toAddress | trimAddress}}</router-link>\r\n                      </span></td>\r\n                </tr>\r\n                 <tr>\r\n                    <td>TimeStamp：</td>\r\n                    <td><span id=\"block-txn\">{{this.summary.blockTimestamp | format}}</span></td>\r\n                </tr>\r\n            </table>\r\n        </div>\r\n        <div class=\"row detail-section-wrap\">\r\n            <div class=\"row section-title\">Detail</div>\r\n            <div class=\"row section-body\">\r\n                <table class=\"detail-table\">\r\n                    <tr>\r\n                        <td style=\"vertical-align: top\">Input Data：</td>\r\n                        <td id=\"td-table-input-data\">\r\n                            <table class=\"table-input-data\">\r\n                                <tr v-if=\"this.detail.name\"><td>Name: </td><td id=\"input-data-name\">{{this.detail.name}}</td></tr>\r\n                                <tr v-if=\"this.detail.type\"><td>Types: </td><td id=\"input-data-types\">{{this.detail.type}}</td></tr>\r\n                                <tr>\r\n                                <td style=\"vertical-align: top\">Inputs: </td>\r\n                                <td id=\"input-data-params\" >\r\n                                   <div v-for=\"(val,i) in detail.inputs\" :key=\"i\" style=\"white-space:normal\">{{\"[\"+(i+1)+\"]\"}} {{val}}</div>\r\n                                </td>\r\n                                </tr>\r\n                            </table>\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n            </div>\r\n    </div>\r\n    </div>\r\n</div>\r\n</template>\r\n<script>\r\nimport web3 from 'web3'\r\nimport abiDecoder from \"abi-decoder\"\r\nexport default {\r\n  data(){\r\n    return{\r\n      hash:\"\",\r\n      summary:{},\r\n      detail:{\r\n          \"name\":\"\",\r\n          \"type\":\"\",\r\n          \"inputs\":[],\r\n          \"fromAddress\":\"\",\r\n          \"toAddress\":\"\"\r\n      }\r\n    }\r\n  },\r\n  watch:{\r\n      hash(val){\r\n        this.hash = val;\r\n        this.initData();\r\n        },\r\n    $route(){\r\n      this.summary={};\r\n      this.detail={\r\n          \"name\":\"\",\r\n          \"type\":\"\",\r\n          \"inputs\":[],\r\n          \"fromAddress\":\"\",\r\n          \"toAddress\":\"\"\r\n      }\r\n      var aid = this.$route.params.aid;\r\n      this.hash == aid ?this.initData() : this.hash = aid;\r\n    } \r\n  },\r\n  methods:{\r\n    initData(){\r\n        const that = this;\r\n      this.$axios.get(\"/transaction/\"+this.hash).then((json)=>{\r\n        if(json.businessCode == \"SUCCESS\"){\r\n          if(json.systemCode == \"SUCCESS\"){\r\n            this.summary = json.result;\r\n          }else {\r\n                this.$toast.top(json.message)\r\n                }\r\n            } else {\r\n                this.$toast.top(json.message)\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                that.$toast.top(\"System is busy, please try again later\");\r\n            })\r\n      this.initDetail();\r\n      this.fetchInputData();\r\n    },\r\n    initDetail(){\r\n        const that = this;\r\n      var data = {\"page\": 1, \"pageSize\": 99999999, \"transactionHash\": this.hash}\r\n      this.$axios.post(\"/tokenTransfer/dcc\",data).then((json)=>{\r\n        if(json.businessCode == \"SUCCESS\"){\r\n          if(json.systemCode == \"SUCCESS\"){\r\n              if(json.result.items.length >0){\r\n                this.detail.fromAddress =json.result.items[0].fromAddress;\r\n                this.detail.toAddress = json.result.items[0].toAddress;\r\n              }\r\n          }else {\r\n                this.$toast.top(json.message)\r\n                }\r\n          } else {\r\n              this.$toast.top(json.message)\r\n              }\r\n          })\r\n          .catch(function(error) {\r\n               that.$toast.top(\"System is busy, please try again later\")\r\n          })\r\n    },\r\n    fetchInputData(){\r\n        const that = this;\r\n        this.$axios.get(\"/transaction/data/\"+this.hash).then((json)=>{\r\n        if(json.businessCode == \"SUCCESS\"){\r\n          if(json.systemCode == \"SUCCESS\"){\r\n            let t = json.result;\r\n            if(t.abi){\r\n                abiDecoder.addABI(JSON.parse(t.abi));\r\n                //获取input name值和transfer type值\r\n                const decodedData = abiDecoder.decodeMethod(t.inputData);\r\n                this.detail[\"name\"] = decodedData.name;\r\n                const type = decodedData.params.map((val)=>{\r\n                        return val.type\r\n                 })\r\n                this.detail[\"type\"] = type.join(',');\r\n                 if (t.inputData) {\r\n                      let onlyParams = t.inputData.substring(10);\r\n                      let arr = this.chunkString(onlyParams, 64);\r\n                     this.detail[\"inputs\"] = arr;\r\n                  }\r\n            }else{\r\n                this.detail.inputs.push(t.inputData);\r\n                \r\n            }  \r\n\r\n          }else {\r\n               this.$toast.top(json.message)\r\n                }\r\n          } else {\r\n               this.$toast.top(json.message)\r\n              }\r\n          })\r\n          .catch(function (error) {\r\n               that.$toast.top(\"System is busy, please try again later\")\r\n          })\r\n    },\r\n    chunkString(str, length){\r\n        return str.match(new RegExp('.{1,' + length + '}', 'g'));\r\n    }\r\n\r\n  },\r\n  mounted(){\r\n    this.hash = this.$route.params.aid.split(\"?time\")[0];\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.blockSearch .search{\r\n  float:none;\r\n  margin:0 auto 20px;\r\n}\r\n</style>\r\n\r\n"],"sourceRoot":""}