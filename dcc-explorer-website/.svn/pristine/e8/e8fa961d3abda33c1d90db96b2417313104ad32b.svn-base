{"version":3,"sources":["webpack:///./src/common/src/common/loading.vue","webpack:///./src/components/index/src/components/index/indexBanner.vue"],"names":[],"mappings":";AAyBA;EACA;EACA;EACA;EACA;EACA;EACA;CACA;AACA;EACA;EACA;EACA;CACA;AAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;CACA;AAEA;EACA;EACA;EACA;CACA;AAEA;EACA;EACA;CACA;AAEA;EACA;EACA;CACA;AAEA;CAAA;AACA;CAAA;AACA;CAAA;AACA;CAAA;AAEA;EACA;EACA;CACA;AAEA;EACA;EACA;CACA;AAEA;EACA;EACA;CACA;AAEA;EACA;EACA;CACA;AAEA;EACA;EACA;CACA;AAEA;EACA;EACA;CACA;AAEA;EACA;EACA;CACA;AAEA;EACA;EACA;CACA;AAEA;EACA;EACA;CACA;AAEA;EACA;EACA;CACA;AAEA;EACA;EACA;CACA;AAEA;AACA;CAAA;AACA;CAAA;CACA;AAEA;AACA;IACA;IACA;CACA;AAAA;IACA;IACA;CACA;CACA;;;ACUA;IACA;CACA","file":"static/css/2.2.css","sourcesContent":["<template>\r\n  <div class=\"loading\">\r\n   <div class=\"spinner\">\r\n  <div class=\"spinner-container container1\">\r\n    <div class=\"circle1\"></div>\r\n    <div class=\"circle2\"></div>\r\n    <div class=\"circle3\"></div>\r\n    <div class=\"circle4\"></div>\r\n  </div>\r\n  <div class=\"spinner-container container2\">\r\n    <div class=\"circle1\"></div>\r\n    <div class=\"circle2\"></div>\r\n    <div class=\"circle3\"></div>\r\n    <div class=\"circle4\"></div>\r\n  </div>\r\n  <div class=\"spinner-container container3\">\r\n    <div class=\"circle1\"></div>\r\n    <div class=\"circle2\"></div>\r\n    <div class=\"circle3\"></div>\r\n    <div class=\"circle4\"></div>\r\n  </div>\r\n</div>\r\n  </div>\r\n</template>\r\n<style>\r\n.loading{\r\n  font-size:14px;\r\n  position: absolute;\r\n  left:50%;\r\n  top:50%;\r\n  transform: translate(-50%,-50%);\r\n  z-index:30;\r\n}\r\n.spinner {\r\n  width: 40px;\r\n  height: 40px;\r\n  position: relative;\r\n}\r\n \r\n.container1 > div, .container2 > div, .container3 > div {\r\n  width: 6px;\r\n  height: 6px;\r\n  background-color: #000;\r\n \r\n  border-radius: 100%;\r\n  position: absolute;\r\n  -webkit-animation: bouncedelay 1.2s infinite ease-in-out;\r\n  animation: bouncedelay 1.2s infinite ease-in-out;\r\n  -webkit-animation-fill-mode: both;\r\n  animation-fill-mode: both;\r\n}\r\n \r\n.spinner .spinner-container {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n \r\n.container2 {\r\n  -webkit-transform: rotateZ(45deg);\r\n  transform: rotateZ(45deg);\r\n}\r\n \r\n.container3 {\r\n  -webkit-transform: rotateZ(90deg);\r\n  transform: rotateZ(90deg);\r\n}\r\n \r\n.circle1 { top: 0; left: 0; }\r\n.circle2 { top: 0; right: 0; }\r\n.circle3 { right: 0; bottom: 0; }\r\n.circle4 { left: 0; bottom: 0; }\r\n \r\n.container2 .circle1 {\r\n  -webkit-animation-delay: -1.1s;\r\n  animation-delay: -1.1s;\r\n}\r\n \r\n.container3 .circle1 {\r\n  -webkit-animation-delay: -1.0s;\r\n  animation-delay: -1.0s;\r\n}\r\n \r\n.container1 .circle2 {\r\n  -webkit-animation-delay: -0.9s;\r\n  animation-delay: -0.9s;\r\n}\r\n \r\n.container2 .circle2 {\r\n  -webkit-animation-delay: -0.8s;\r\n  animation-delay: -0.8s;\r\n}\r\n \r\n.container3 .circle2 {\r\n  -webkit-animation-delay: -0.7s;\r\n  animation-delay: -0.7s;\r\n}\r\n \r\n.container1 .circle3 {\r\n  -webkit-animation-delay: -0.6s;\r\n  animation-delay: -0.6s;\r\n}\r\n \r\n.container2 .circle3 {\r\n  -webkit-animation-delay: -0.5s;\r\n  animation-delay: -0.5s;\r\n}\r\n \r\n.container3 .circle3 {\r\n  -webkit-animation-delay: -0.4s;\r\n  animation-delay: -0.4s;\r\n}\r\n \r\n.container1 .circle4 {\r\n  -webkit-animation-delay: -0.3s;\r\n  animation-delay: -0.3s;\r\n}\r\n \r\n.container2 .circle4 {\r\n  -webkit-animation-delay: -0.2s;\r\n  animation-delay: -0.2s;\r\n}\r\n \r\n.container3 .circle4 {\r\n  -webkit-animation-delay: -0.1s;\r\n  animation-delay: -0.1s;\r\n}\r\n \r\n@-webkit-keyframes bouncedelay {\r\n  0%, 80%, 100% { -webkit-transform: scale(0.0) }\r\n  40% { -webkit-transform: scale(1.0) }\r\n}\r\n \r\n@keyframes bouncedelay {\r\n  0%, 80%, 100% {\r\n    transform: scale(0.0);\r\n    -webkit-transform: scale(0.0);\r\n  } 40% {\r\n    transform: scale(1.0);\r\n    -webkit-transform: scale(1.0);\r\n  }\r\n}\r\n</style>\r\n\r\n","<template>\r\n  <div class=\"banner-index row\">\r\n          <div class=\"container bannerWrap\">\r\n              <div class=\"col-md-8 chart-index\">\r\n                  <div class=\"chart-title\">24h Transaction History</div>\r\n                  <canvas id=\"chart-trend\"></canvas>\r\n                    <Loading v-show=\"canvasLoad\"></Loading>\r\n              </div>\r\n              <div class=\"col-md-4\">\r\n                  <table class=\"table-banner\">\r\n                      <thead>\r\n                          <tr><th colspan=\"2\">Network Status<!--&nbsp;&nbsp;<small><span id=\"update-network-time\">0</span>s前更新</small>--></th></tr>\r\n                      </thead>\r\n                      <tbody>\r\n                          <tr><td>Peer Number：</td><td><span id=\"peer-number\">{{this.nodeNumber}}</span></td></tr>\r\n                          <tr><td>Block Height：</td><td><span id=\"block-number\">{{this.blockNumber}}</span></td></tr>\r\n                          <tr><td>Block Time：</td><td><span id=\"gene-block-time\">{{this.geneBlockTime}}</span>s</td></tr>\r\n                          <tr><td>Consensus Time：</td><td><span id=\"consensus-time\">{{this.consensusTime}}</span>s</td></tr>\r\n                      </tbody>\r\n                  </table>\r\n                  <div class=\"db-tx-number\">\r\n                      <div class=\"header\">Total Txns</div>\r\n                      <div class=\"body\"><span id=\"total-txn\">{{this.totalTransactionNumber | percent()}}</span></div>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n    </div>\r\n</template>\r\n<script>\r\n  import Chart from 'chart.js'\r\n  import chartData from '../../data/chartData'\r\n  import Loading from '../../common/loading'\r\nexport default {\r\n  data(){\r\n      return{\r\n          points:[],\r\n          labels:[],\r\n          datas:[],\r\n          nodeNumber:0,\r\n          blockNumber:0,\r\n          geneBlockTime:0,\r\n          consensusTime:0,\r\n          totalTransactionNumber:0,\r\n          time:1,//判读是初次绘制图形还是更新图形,\r\n          banner:{},\r\n          chart:{},\r\n          canvasLoad:false,//canvas加载状态\r\n\r\n\r\n      }\r\n  },\r\n  components:{Loading},\r\n  methods:{\r\n    drawLine(){\r\n        var ctx = document.getElementById(\"chart-trend\");\r\n        for (var i = 0; i < this.points.length; i++) {\r\n            this.labels.push(this.points[i].x + \"'\");\r\n            this.datas.push(this.points[i].y);\r\n        }\r\n        this.chart  = new Chart(ctx, {\r\n            type: 'line',\r\n            data: {\r\n                labels: this.labels,\r\n                datasets: [{\r\n                    label: 'Txn',\r\n                    data: this.datas,\r\n                    fillColor : \"#fff\"\r\n                }]\r\n            },\r\n            options: {\r\n                legend: {\r\n                    display: false\r\n                },\r\n                \r\n                layout: {\r\n                    padding: {\r\n                        // left: 20,\r\n                        // right: 50\r\n                    }\r\n                },\r\n                elements: {\r\n                    point: {\r\n                        backgroundColor: '#c2b7e4'\r\n                    },\r\n                    line: {\r\n                        tension: 0,\r\n                        borderColor: '#c2b7e4'\r\n                    }\r\n                 \r\n                },\r\n                scales: {\r\n                    xAxes: [{\r\n                        gridLines: {\r\n                            display: true,\r\n                            zeroLineColor: '#c2b7e4',\r\n                            zeroLineWidth: 1\r\n                        },\r\n                        ticks: {\r\n                            fontColor: '#c2b7e4'\r\n                        }\r\n                    }],\r\n                    yAxes: [{\r\n                        gridLines: {\r\n                            display: true,\r\n                            zeroLineColor: '#fff',\r\n                            color: '#4d4d4d9d',\r\n                            zeroLineWidth: 1\r\n                        },\r\n                        ticks: {\r\n                            fontColor: '#c2b7e4'\r\n                        }\r\n                    }]\r\n                }\r\n            }\r\n        });\r\n\r\n    },\r\n    initData(){\r\n        const that = this;\r\n            this.$axios.get(\"/statistics/index\").then((json)=>{\r\n             if (json.systemCode == \"SUCCESS\") {\r\n                if (json.businessCode == \"SUCCESS\") {\r\n                    this.canvasLoad = false;\r\n                    this.nodeNumber = json.result.nodeNumber;\r\n                    this.blockNumber = json.result.blockNumber;\r\n                    this.geneBlockTime = json.result.geneBlockTime / 1000;\r\n                    this.consensusTime = json.result.consensusTime / 1000;\r\n                    this.totalTransactionNumber = json.result.totalTransactionNumber;\r\n                    this.points =json.result.trendList;\r\n                    this.time == 1?this.drawLine():this.chart.update();\r\n                    this.time = 2;\r\n                } \r\n                } \r\n            })\r\n       },\r\n    loopData(){\r\n        this.banner = setInterval(this.initData,15000)\r\n    }\r\n  },\r\n  mounted(){\r\n      this.canvasLoad = true;\r\n        this.initData();\r\n        this.loopData();\r\n    \r\n  },\r\n  destroyed(){\r\n       clearInterval(this.banner);\r\n  }\r\n}\r\n</script>\r\n<style>\r\n.banner-index .container1 > div,.banner-index .container2 > div,.banner-index .container3 > div{\r\n    background:#fff;\r\n}\r\n</style>\r\n\r\n"],"sourceRoot":""}